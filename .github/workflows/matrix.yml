name: Build Matrix

on:
  pull_request:
  push:

jobs:
  skip-duplicates:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          cancel_others: 'true'
          # Will ignore data because our checks don't use it yet
          paths_ignore: '["README.md", "docs/**", "tools/**", "data/**", ".clang-tidy", ".github/workflows/clang-tidy.yml", "*.lua", "*.md", "*.rml", "*.rcss", "cpp-lint.yml", ".github/workflows/cpp-lint.yml", ".github/workflows/documentation.yml", ".github/workflows/lua-lint.yml", ".github/workflows/clang-tidy.yml", "*.py"]'

  linux-build:
    needs: skip-duplicates
    # Skip tasks
    if: ${{ needs.skip-duplicates.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        config: [Release, Debug]
        compiler: [gcc, clang]
        os: [ubuntu-latest]

    name: Ubuntu with ${{ matrix.compiler }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set compiler
      run: |
        echo "CC=${{ matrix.compiler == 'gcc' && 'gcc' || 'clang'   }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt install -y libglfw3 libglfw3-dev libopenal-dev libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev

    - name: WORKAROUND FOR https://github.com/actions/runner-images/issues/8659
      if: |
        matrix.compiler=='clang'
      run: |
        echo "TEMPORARY WORKAROUND FOR GITHUB RUNNER BUG #8659\n\nRemoving GCC 13 as it breaks Clang14"
        sudo rm -f /etc/apt/sources.list.d/ubuntu-toolchain-r-ubuntu-test-jammy.list
        sudo apt-get update
        sudo apt-get install -y --allow-downgrades libc6=2.35-0ubuntu3.5 libc6-dev=2.35-0ubuntu3.5 libstdc++6=12.3.0-1ubuntu1~22.04 libgcc-s1=12.3.0-1ubuntu1~22.04

    - name: Configure Build files
      run: |
        ./setup_env.sh

    - name: Build Conquer Space
      run: |
        cmake --build build --parallel --config ${{ matrix.config }} -- -j1

    - name: Tests
      run: |
        ctest -V --schedule-random --progress --output-on-failure --parallel --no-tests error --build-config ${{ matrix.config }} --test-dir build/test

    - uses: actions/upload-artifact@v2
      continue-on-error: true
      with:
        name: Conquer-Space_${{ matrix.os }}${{ matrix.compiler }}_${{ matrix.config }}_b${{ github.run_number }}
        path: |
          binaries

  windows-build:
    needs: skip-duplicates
    # Skip tasks
    if: ${{ needs.skip-duplicates.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        config: [Release, Debug]
    runs-on: [windows-latest]
    name: Windows (${{ matrix.config }})
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Configure Build Files
      shell: cmd
      run: |
        ".\setup_env.bat"

    - name: Build Conquer Space
      run: |
        cmake --build build --parallel --config ${{ matrix.config }}

    - name: Run Tests
      run: ctest -V --schedule-random --progress --output-on-failure --parallel --no-tests error --build-config ${{ matrix.config }} --test-dir build/test

    - uses: actions/upload-artifact@v2
      continue-on-error: true
      with:
        name: Conquer-Space_Windows_${{ matrix.config }}_${{ github.run_number }}
        path: |
          binaries

  build-check:
    needs: [windows-build, linux-build]
    runs-on: ubuntu-latest
    name: Build Matrix
    steps:
      - name: Check
        run: |
          echo success
